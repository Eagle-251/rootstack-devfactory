job "{{ nomad_gitlab_job_name }}" {
  datacenters = ["{{ nomad_datacenter }}"]
  type = "service"

  constraint {
    attribute = "${attr.kernel.name}"
    value     = "linux"
  }

  group "gitlab" {
    count = "{{ nomad_gitlab_group_count }}"
    volume "{{ nomad_gitlab_volume.name }}"{
      type = "{{ nomad_gitlab_volume.type }}"
      access_mode     = "{{ nomad_gitlab_volume.accessmode }}"
      attachment_mode = "{{ nomad_gitlab_volume.attachmentmode }}"     
      read_only = {{ nomad_gitlab_volume.read_only }}
      source = "{{ nomad_gitlab_volume.id }}"
    }
    network {
      mode = "bridge"
      port "{{ nomad_gitlab_network[0].name }}" {
        to = {{ nomad_gitlab_network[0].port }}
        host_network = "{{ nomad_gitlab_network[0].hostnetwork }}"
      }
    }

    service {
      name = "{{ nomad_gitlab_services[0].name }}"
      port = "{{ nomad_gitlab_services[0].port }}"
      tags = [
        "traefik.enable=true",
        "traefik.http.routers.gitlab.tls=true",
        "traefik.http.routers.gitlab.entrypoints=https",
        "traefik.http.routers.gitlab.tls.certResolver={{ consul_dc_name }}",
        "traefik.http.routers.gitlab.tls.domains[0].main=gitlab.{{ zone }}",
      ]
      }

    task "gitlab" {
      driver = "docker"
      resources {
        cpu    = {{ nomad_gitlab_job_resources.cpu }} 
        memory = {{ nomad_gitlab_job_resources.memory }}  
      }
      config {
        image          = "{{ nomad_gitlab_docker_image }}"
        ports          = ["{{ nomad_gitlab_network[0].name }}"]
        volumes = [
          "{{ nomad_gitlab_volume_container_mount_point }}/data:/var/opt/gitlab",
          "local/gitlab.rb:/etc/gitlab/gitlab.rb"
        ]
        {% if 'aarch64' != ansible_architecture %}
        logging {
          type = "loki"
        }
        {% endif %}
      }

      volume_mount {
          volume = "{{ nomad_gitlab_volume.id }}"
          destination = "{{ nomad_gitlab_volume_container_mount_point }}"
          read_only = false
      }

      template {
        data = <<EOH
external_url '{{ nomad_gitlab_docker_configuration.externalurl }}'
nginx['listen_https'] = false
nginx['listen_port'] = {{ nomad_gitlab_docker_configuration.listenport }}
nginx['real_ip_trusted_addresses'] = {{ nomad_gitlab_docker_configuration.trusted_addresses }}
nginx['real_ip_header'] = 'X-Forwarded-For'
nginx['real_ip_recursive'] = '{{ nomad_gitlab_docker_configuration.real_ip_recursive }}'
EOH
       destination = "local/gitlab.rb" 
     }
    }
  }
}

